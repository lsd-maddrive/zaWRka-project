# max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
footprint: [ [0.4, 0.12], [-0.08, 0.12], [-0.08, -0.12], [0.4, -0.12] ]

# map_type: voxel

rs_layer:
  enabled:              true
  max_obstacle_height:  0.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    20
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  false  #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  laser_scan_sensor
  laser_scan_sensor:
    data_type: LaserScan
    topic: rs_scan
    marking: true
    clearing: true

lidar_layer:
  enabled:              true
  max_obstacle_height:  0.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    20
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  false   #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  laser_scan_sensor
  laser_scan_sensor:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: false
  # stereo_scan_sensor:
  #   data_type: LaserScan
  #   topic: stereo_scan
  #   marking: true
  #   clearing: true

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:   10 # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.4 # max. distance from an obstacle at which costs are incurred for planning paths.
  # For fast
  # cost_scaling_factor:  3.5  # exponential rate at which the obstacle cost drops off (default: 10)
  # inflation_radius:     0.7  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true


