# max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
footprint: [ [0.4, 0.17], [-0.08, 0.17], [-0.08, -0.17], [0.4, -0.17] ]

# map_type: voxel

obstacle_layer:
  enabled:              true
  max_obstacle_height:  0.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    20
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  false    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  laser_scan_sensor
  laser_scan_sensor:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true

  # stereo_scan_sensor:
  #   data_type: LaserScan
  #   topic: stereo_scan
  #   marking: true
  #   clearing: true

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  4.5  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.
  # For fast
  # cost_scaling_factor:  3.5  # exponential rate at which the obstacle cost drops off (default: 10)
  # inflation_radius:     0.7  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true

  rs_st_obstacle_layer:
  enabled:                  true
  voxel_decay:              15    # seconds if linear, e^n if exponential
  decay_model:              0     # 0=linear, 1=exponential, -1=persistent
  voxel_size:               0.1  # meters
  track_unknown_space:      true  # default space is known кубики в рвизе которые строит камера
  max_obstacle_height:      1.0   # meters Максимальная высота любого препятствия, которое будет вставлено в карту затрат, в метрах. Этот параметр должен быть установлен немного выше высоты вашего робота. 
  unknown_threshold:        15    # voxel height
  mark_threshold:           0     # voxel height Максимальное количество отмеченных ячеек, разрешенное в столбце, считающемся «свободным». 
  update_footprint_enabled: true
  combination_method:       1     # 1=max, 0=override
  obstacle_range:           3.0   # meters
  origin_z:                 0.0   # meters Начало координат z карты в метрах.
  publish_voxel_map:        true # default off
  transform_tolerance:      0.2   # seconds задержка между преобразованиями между фреймом робота и датчика  
  mapping_mode:             false # default off, saves map not for navigation
  map_save_duration:        60    # default 60s, how often to autosave
  observation_sources:      rgbd1_mark rgbd1_clear
  rgbd1_mark:
    data_type: PointCloud2
    topic: camera/depth/points
    marking: true
    clearing: false
    min_obstacle_height: 0.01     # default 0, meters (min height to scan
    max_obstacle_height: 0.5     # default 3, meters
    expected_update_rate: 0.0    # default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          # default false, for laser scans
    filter: "voxel"        # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on второй способ жрет много памяти
    voxel_min_points: 0          # default 0, minimum points per voxel for voxel filter
    clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
  rgbd1_clear:
    data_type: PointCloud2
    topic: camera/depth/points
    marking: false
    clearing: true
    max_z: 7.0                  # default 0, meters
    min_z: 0.1                  # default 10, meters
    vertical_fov_angle: 0.8745  # default 0.7, radians
    horizontal_fov_angle: 1.048 # default 1.04, radians
    decay_acceleration: 5.0     # default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar


