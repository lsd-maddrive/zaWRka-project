<?xml version="1.0"?>
<launch>
  <arg name="x"                       default="19" />
  <arg name="y"                       default="3.8" />
  <arg name="yaw"                     default="-1.57" doc="[0 - right, 1.57 - up]" />
  <arg name="world_name"              default="maze2020v2" />
  <arg name="world_minor_version"     default="3" />

  <arg name="localization"            default="true" doc="[false means SLAM, true means localization]" />
  <arg name="record_bag"              default="false" doc="[true - record competition bag-file]" />
  <arg name="wp_global_planner"       default="true"  doc="[true - wp_global_planner, false - global_planner]"/>
  <arg name="mapping_algorithm"       default="hector_mapping" doc="[hector_mapping, gmapping]"/>
  <arg name="run_solver"              default="true" doc="[bool]" />

  <arg name="render_maze"             default="false" />

  <arg name="sim_instead_of_real"     default="false" doc="[true means Gazebo, false means real robot]" />
  <arg name="gz_gui"                  default="false" />
  <arg name="rviz"                    default="true" />


  <!-- 1. Navigation stack -->
  <group if="$(arg localization)">
    <include file="$(find wr8_software)/launch/localization.launch">
      <arg name="wp_global_planner"   value="$(arg wp_global_planner)" />
      <arg name="map"                 value="$(arg world_name)" />
      <arg name="x"                   value="$(arg x)"/>
      <arg name="y"                   value="$(arg y)"/>
      <arg name="yaw"                 value="$(arg yaw)"/>
    </include>
  </group>
  <group unless="$(arg localization)">
    <include file="$(find wr8_software)/launch/slam.launch">
      <arg name="wp_global_planner"   value="$(arg wp_global_planner)"/>
      <arg name="mapping_algorithm"   value="$(arg mapping_algorithm)"/>
      <arg name="x"                   value="$(arg x)"/>
      <arg name="y"                   value="$(arg y)"/>
      <arg name="yaw"                 value="$(arg yaw)"/>
    </include>
  </group>
  <node pkg="md_laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
    <param name="use_imu"         value="false"/>
    <param name="use_odom"        value="false"/>
    <!-- <param name="use_vel"         value="true"/> -->
    <param name="max_correspondence_dist" value="0.1"/>
    <param name="max_angular_correction_deg" value="5"/>
    <!-- <remap from="/vel"            to="/bicycle_model_twist"/> -->
    <param name="publish_tf"      value="false"/>

    <param name="fixed_frame"     value="odom"/>
    <param name="base_frame"      value="base_footprint"/>
    <param name="max_iterations"  value="10"/>
  </node>
  <node pkg="wr8_software" type="speed_mapper.py" name="speed_mapper" output="screen">
  </node>
  <node pkg="wr8_software" type="converter.py" name="msg_converter">
    <param name="frame_id"         value="odom"/>
  </node>
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" clear_params="true">
    <rosparam command="load" file="$(find wr8_software)/config/ekf.yaml" />
  </node>


  <!-- 2. Solver -->
  <group if="$(arg run_solver)">
    <node pkg="wr8_software" type="solver.py" name="solver" output="screen">
      <param name="render_maze"         value="$(arg render_maze)"/>
      <param name="mad_detector/model_path"  value="$(find mad_detector)/models/Yolov4Tiny_mad_model.pth"/>
      <rosparam file="$(find wr8_software)/config/solver_config.yaml" command="load"/>
      <rosparam file="$(find wr8_software)/config/$(arg world_name).yaml" command="load"/>
    </node>
    <include file="$(find car_parking)/launch/car_parking.launch"/>
  </group>


  <!-- 3. Visualization using rviz -->
  <group if="$(arg sim_instead_of_real)">
    <group if="$(arg rviz)">
      <group if="$(arg localization)">
        <include file="$(find wr8_software)/launch/rviz_localization_view.launch"/>
      </group>
      <group unless="$(arg localization)">
        <include file="$(find wr8_software)/launch/rviz_slam_view.launch"/>
      </group>
    </group>
  </group>


  <!-- 4. Gazebo simulation -->
  <group if="$(arg sim_instead_of_real)">
    <include file="$(find wr8_description)/launch/gazebo.launch">
      <arg name="world_name"          value="$(arg world_name).$(arg world_minor_version).world"/>
      <arg name="x"                   value="$(arg x)"/>
      <arg name="y"                   value="$(arg y)"/>
      <arg name="yaw"                 value="$(arg yaw)"/>
      <!-- <arg name="yaw"                 value="-1.65"/> -->
      <arg name="gz_gui"              value="$(arg gz_gui)"/>
    </include>
  </group>


  <!-- 5. Real robot -->
  <group unless="$(arg sim_instead_of_real)">
    <arg name="lidar_x" default="0.34" />
    <arg name="lidar_z" default="0.05" />
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser4" args="$(arg lidar_x) 0 $(arg lidar_z) 0 0 0 /base_link /laser 40" />

    <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0.05 0 0 0 /base_footprint /base_link 40" />

    <!-- <param name="robot_description" command="$(find xacro)/xacro $(find wr8_description)/urdf/model.urdf.xacro" /> -->
    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/> -->
  </group>

        <!-- /cam_top /cam_bottom /cmd_vel /cmd_vel_metric /scan /tf /tf_static /cmd /odometry/filtered /lsm_pose_estimation /bicycle_model_pose_estimation /particlecloud /move_base/local_costmap/costmap /move_base/global_costmap/costmap"  -->
        <!-- args="record -o $(env HOME)/catkin_ws/src/autonet18p2020_MadDrive/data/maddrive_a18_11 -a"  -->

  <!-- 6. Bag recording -->
  <!-- TODO - topics! -->
  <node pkg="rosbag" type="record" name="rosbag_record_data"
        args="record -o $(env HOME)/catkin_ws/src/autonet18p2020_MadDrive/data/maddrive_a18_11
          /cam_top /cam_bottom /cmd_vel /cmd_vel_metric /scan /tf /tf_static /cmd
          /odometry/filtered /lsm_pose_estimation /bicycle_model_pose_estimation
          /map /trajectory /particlecloud /path
          /move_base/global_costmap/costmap /move_base/WPGlobalPlanner/plan
          /move_base/local_costmap/footprint /move_base/local_costmap/costmap
          /move_base/TebLocalPlannerROS/global_plan /move_base/TebLocalPlannerROS/teb_poses
          /detected_signs_img /detected_signs_img
        "
        if="$(arg record_bag)" />
</launch>
